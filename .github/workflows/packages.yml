name: Packages

on:
  pull_request:
    paths:
      - 'packages/**'
      - '.github/workflows/packages.yml'
      - '.eslintrc'
      - 'jest.config.js'
      - 'tsconfig.json'
    branches:
      - master

env:
  scope: '@astolat'
  registry-url: 'https://registry.npmjs.org/'

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.head_ref }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Read .nvmrc
        run: |
          echo "::set-env name=node-version::$(cat ./.nvmrc)"

      - name: Setup Node.js v${{ env.node-version }}
        uses: actions/setup-node@v1.3.0
        with:
          node-version: ${{ env.node-version }}
          scope: ${{ env.scope }}
          registry-url: ${{ env.registry-url }}

      - name: Set variables
        run: |
          echo "::set-env name=yarn-cache::$(yarn cache dir)"

      - name: Restore yarn cache
        id: cache
        uses: actions/cache@v1.0.3
        with:
          path: ${{ env.yarn-cache }}
          key: yarn-cache-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-cache-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

  check:
    name: Check
    runs-on: ubuntu-latest
    needs: [setup]
    strategy:
      fail-fast: false
      matrix:
        command: [lint,test,typecheck]
    steps:
      - name: Checkout ${{ github.head_ref }}
        uses: actions/checkout@v2

      - name: Configure
        run: |
          git fetch --depth=1 origin ${{ github.base_ref }}
          echo "::set-env name=node-version::$(cat ./.nvmrc)"

      - name: Setup Node.js v${{ env.node-version }}
        uses: actions/setup-node@v1.3.0
        with:
          node-version: ${{ env.node-version }}
          scope: ${{ env.scope }}
          registry-url: ${{ env.registry-url }}

      - name: Set variables
        run: |
          echo "::set-env name=yarn-cache::$(yarn cache dir)"
          echo "::add-path::$(yarn global bin)"

      - name: Restore yarn cache
        uses: actions/cache@v1.0.3
        with:
          path: ${{ env.yarn-cache }}
          key: yarn-cache-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies
        run: |
          yarn

      - name: Run ${{ matrix.command }} for changed packages
        run: |
          CMD='${{ matrix.command }}'
          ARGS=''
          FILES=`git diff --name-only --diff-filter=ACMR origin/${{ github.base_ref }} -- '***.[jt]s' '***.[jt]sx'`
          COUNT=`echo "${FILES}" | sed '/^\s*$/d' | wc -l | tr -d '[:space:]'`

          if [[ "${COUNT}" == "0" ]]; then
            echo "Skipping ${{ matrix.command }} - No relevant changes"
            exit 0
          fi

          echo "Running ${{ matrix.command }} for ${COUNT} file$([[ "${COUNT}" == '1' ]] && echo '' || echo 's')"
          echo ${FILES} | sed 's/^/  /'

          case ${CMD} in
            lint)
              CMD='eslint'
              ARGS=${FILES}
              ;;
            test)
              ARGS='--changedSince origin/${{ github.base_ref }}'
              ;;
            typecheck)
              echo `node -p "JSON.stringify({ ...require('./tsconfig.json'), files: process.argv[1].trim().split(/[\r\n]+/g) })" "${FILES}"` > ./tsconfig.json
              ;;
          esac

          yarn ${CMD} ${ARGS}
