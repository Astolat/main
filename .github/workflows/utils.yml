name: '@astolat/utils'

on:
  pull_request:
    paths:
      - packages/utils/**
    branches: 
      - master

env:
  pkg_name: 'utils'
  node_version: '12.x'
  registry_url: 'https://npm.pkg.github.com'

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.ref }}
        uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: ${{ env.node_version }}
          registry-url: ${{ env.registry_url }}

      - name: Install node_modules
        run: yarn workspace ${{ github.workspace }} install

      - name: Upload ${{ github.workspace }} artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ github.workspace }}
          path: packages/${{ env.pkg_name }}

  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Download artifact
        uses: actions/download-artifact@master
        with:
          name: ${{ github.workspace }}
          path: ./
          
      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: ${{ env.node_version }}

      - name: Run lint
        run: npm run lint --if-present

  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Download artifact
        uses: actions/download-artifact@master
        with:
          name: ${{ github.workspace }}
          path: ./
          
      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: ${{ env.node_version }}

      - name: Run tests
        run: npm run test --if-present

  build:
    runs-on: ubuntu-latest
    needs: install
    if: success()
    steps:
      - name: Download artifact
        uses: actions/download-artifact@master
        with:
          name: ${{ github.workspace }}
          path: ./
          
      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: ${{ env.node_version }}

      - name: Run build
        run: npm run build --if-present
